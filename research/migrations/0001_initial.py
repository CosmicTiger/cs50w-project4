# Generated by Django 3.2.4 on 2021-06-11 04:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('primitiva_ecosystem', '0001_initial'),
        ('primitiva_staff', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConditionsCauses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('reasons', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentVariables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('tendency', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('program_code', models.CharField(max_length=120)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('program_type', models.IntegerField(choices=[(1, 'Internal Control - Daily checks on the subjects in the natural reserve'), (2, 'External Control - Special checks for investigation or research purposes of external agents from the natural reserve'), (3, 'Breeding Program - Programs in which is necessary that certain groups of subject reproduce themselves'), (4, 'Emergency Program - Programs of contingency when something bad happens in the daily checks')])),
                ('status', models.IntegerField(choices=[(1, 'Active - Program or Research is on course'), (2, 'Pending - Program or Research is pending of approval'), (3, 'Approved - Program or Research is approved'), (4, 'Disapproved - Program or Research is disapproved for various reasons'), (5, 'Inactive - Program or Research is not on course')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Threats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('tendency', models.CharField(max_length=150)),
                ('importance', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ThreatsBoosters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('influence', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ThreatsDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effects', models.TextField()),
                ('booster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booster_detailed', to='research.threatsboosters', verbose_name='Boosters')),
                ('threat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threat_detailed', to='research.threats', verbose_name='Threat')),
            ],
        ),
        migrations.AddField(
            model_name='threats',
            name='boosters',
            field=models.ManyToManyField(related_name='threat_details', through='research.ThreatsDetails', to='research.ThreatsBoosters', verbose_name='Threats Details'),
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('status', models.IntegerField(choices=[(1, 'Active - Program or Research is on course'), (2, 'Pending - Program or Research is pending of approval'), (3, 'Approved - Program or Research is approved'), (4, 'Disapproved - Program or Research is disapproved for various reasons'), (5, 'Inactive - Program or Research is not on course')])),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program', to='research.program', verbose_name='Program')),
                ('researcher_lead', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='researcher_lead', to='primitiva_staff.primitivaoccupations', verbose_name='Researcher Lead')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObservationsResearchPlantae',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Active - Animal is under research'), (2, 'Pending - Animal is out of sight from researchers'), (3, 'Inactive - Animal is no longer under research')])),
                ('comment', models.TextField()),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_plantae', to='research.research', verbose_name='Research')),
                ('researched_plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plantae', to='primitiva_ecosystem.plantae', verbose_name='Researched plant')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationsResearchEcosystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_ecosystem', to='research.research', verbose_name='Research')),
                ('threats', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observed_threats', to='research.threats', verbose_name='Threats on the Ecosystem')),
                ('variables', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observed_variables', to='research.environmentvariables', verbose_name='Environment Variables influencing Ecosystem')),
                ('variations', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='primitiva_ecosystem.ecosystemvariations', verbose_name='Ecosystem Variations')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationsResearchAnimalia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Active - Animal is under research'), (2, 'Pending - Animal is out of sight from researchers'), (3, 'Inactive - Animal is no longer under research')])),
                ('comment', models.TextField()),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_animalia', to='research.research', verbose_name='Research')),
                ('researched_animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animalia', to='primitiva_ecosystem.animalia', verbose_name='Researched Animal')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentVariablesValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(blank=True)),
                ('morning_value', models.FloatField()),
                ('midday_value', models.FloatField()),
                ('afternoon_value', models.FloatField()),
                ('change_observations', models.TextField()),
                ('register_at', models.DateTimeField()),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valued_variables', to='research.environmentvariables', verbose_name='Environment Variables')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnvironmentVariablesFactors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cause', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='research.conditionscauses', verbose_name='Environmental Causes')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='research.environmentvariables', verbose_name='Environment Variables')),
            ],
        ),
        migrations.AddField(
            model_name='environmentvariables',
            name='causes',
            field=models.ManyToManyField(related_name='causes', through='research.EnvironmentVariablesFactors', to='research.ConditionsCauses', verbose_name='Causes of Condition'),
        ),
    ]
